/*! structurejs 20-11-2014 */
!function(a){var b=a.global,c=(a.rtname,b.define);b.define=function(d,e){d(a),e&&(b.define=c)}}({global:window,rtname:"structure"}),define(function(a){function b(a){return function(b){return b===a}}function c(a){return function(b){return typeof b===a}}function d(a){return function(b){return{}.toString.call(b)==="[object "+a+"]"}}function e(a,b,c){a[c]=b[c]}function f(a,b){return b.hasOwnProperty(a)}function g(a,b,c){f(c,a)||e(a,b,c)}function h(a,b){var c;for(c in b)j.isObject(b[c])&&!j.isNull(b[c])?(a[c]=j.isArray(b[c])?[]:{},h(a[c],b[c])):e(a,b,c)}function i(a,b){var c;for(c in b)j.isObject(b[c])&&!j.isNull(b[c])?f(c,a)||(a[c]=j.isArray(b[c])?[]:{},i(a[c],b[c])):g(a[c],b[c],c)}var j=a.util={},k=b(void 0),l=c("undefined"),m=d("Undefined");j.isUndefined=function(a){return k(a)||l(a)||m(a)};var n=b(null),o=d("Null");j.isNull=function(a){return n(a)||o(a)};var p=b(!0),q=b(!1),r=c("boolean"),s=d("Boolean");j.isBoolean=function(a){return p(a)||q(a)||r(a)||s(a)};var t=c("number"),u=d("Number");j.isNumber=function(a){return t(a)||u(a)};var v=c("string"),w=d("String");j.isString=function(a){return v(a)||w(a)};var x=c("function"),y=d("Function");j.isFunction=function(a){return x(a)||y(a)};var z=c("object"),A=d("Object");j.isObject=function(a){return!j.isUndefined(a)&&!j.isFunction(a)&&(z(a)||A(a))};var B=Array.isArray||d("Array");j.isArray=function(a){return B(a)},j.throwError=function(a){throw new Error(a)},j.augment=function(a,b,c,d){j.isObject(a)&&!j.isNull(a)||j.isFunction(a)||j.throwError("arguments[0] should be non-null Object or Function"),j.isObject(b)&&!j.isNull(b)||j.isFunction(b)||j.throwError("arguments[1] should be non-null Object or Function");var f;if(c&&d)h(a,b);else if(c&&!d)for(f in b)e(a,b,f);else if(!c&&d)i(a,b);else for(f in b)g(a,b,f);return a}}),define(function(a){var b=a,c=a.global,d=a.util;b.namespace=function(a,b,e){var f=arguments.length;return 2>f&&d.throwError("arguments[0] and arguments[1] are required"),d.isObject(a)||(a=c),d.isString(b)||d.throwError("arguments[1] should be String"),a[b]?void d.throwError("there has been a "+b+" in given space"):a[b]=e||{}}}),define(function(a){var b=a.global,c=a.rtname,d=a.util,e=a.namespace,f=e(a,"_");f.getThese=function(){var a=[],b=[];return a.alias=function(c){if(d.isString(c)&&b.push(c),d.isNumber(c))for(;b.length>0;)a[b.shift()]=a[c]},a},f.main=function(a,b){var c,d,e;for(c=0,d=a.length,e=f.getThese();d>c;c++)e.push(a[c](e,b,c)),e.alias(c);return e},e(b,c,function(a,b){var c,e,g;if(d.isArray(a)){for(g=!0,c=0,e=a.length;g&&e>c;c++)g=g&&d.isFunction(a[c]);g||d.throwError("arguments[0] should be Array<Function>")}else d.throwError("arguments[0] should be Array");return b=b||{},f.main(a,b)})}),define(function(a){var b=a.global,c=a.rtname,d=a.util;d.augment(b[c],a)},!0);